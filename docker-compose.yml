version: '3.8'

services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - ./apps/api:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/canhav
      - SUPABASE_DATABASE_URL=postgresql+asyncpg://postgres:Aliali-572@gxgmcrqcxfgmhvuborpa.supabase.co:5432/postgres
      - COINGECKO_API_KEY=CG-PH1JM3XpxRdGwmyCr66814mF
      - COINGECKO_FETCH_INTERVAL=300
      - COINGECKO_ASSETS_LIMIT=250
      - ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - SUPABASE_URL=https://gxgmcrqcxfgmhvuborpa.supabase.co
      - SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd4Z21jcnFjeGZnbWh2dWJvcnBhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE0NzExMjQsImV4cCI6MjA2NzA0NzEyNH0.-LoPXC3qe3-BfzlATE3TDpvDZ0nyDX98hYkwzugzFVs
    networks:
      - canhav-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=canhav
    ports:
      - '5433:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - canhav-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      target: development
    ports:
      - '3000:3000'
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_SUPABASE_URL=https://gxgmcrqcxfgmhvuborpa.supabase.co
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd4Z21jcnFjeGZnbWh2dWJvcnBhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE0NzExMjQsImV4cCI6MjA2NzA0NzEyNH0.-LoPXC3qe3-BfzlATE3TDpvDZ0nyDX98hYkwzugzFVs
    depends_on:
      - api
    networks:
      - canhav-network

networks:
  canhav-network:
    driver: bridge

volumes:
  postgres-data:
